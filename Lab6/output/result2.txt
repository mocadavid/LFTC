1: programDef -> [program, IDENTIFIER, ;, stmtlist, endprogram, ;]
2: stmtlist -> [stmt, stmtlist2]
8: stmt -> [declar]
17: declar -> [type, type2, IDENTIFIER, ;]
13: type -> [num]
15: type2 -> [ε]
4: stmtlist2 -> [stmtlist]
2: stmtlist -> [stmt, stmtlist2]
8: stmt -> [declar]
17: declar -> [type, type2, IDENTIFIER, ;]
13: type -> [num]
15: type2 -> [ε]
4: stmtlist2 -> [stmtlist]
2: stmtlist -> [stmt, stmtlist2]
6: stmt -> [simplestmt]
9: simplestmt -> [assignstmt]
18: assignstmt -> [IDENTIFIER, assignstmt1, =, assignstmt2, ;]
20: assignstmt1 -> [ε]
23: assignstmt2 -> [CONST]
4: stmtlist2 -> [stmtlist]
2: stmtlist -> [stmt, stmtlist2]
6: stmt -> [simplestmt]
9: simplestmt -> [assignstmt]
18: assignstmt -> [IDENTIFIER, assignstmt1, =, assignstmt2, ;]
20: assignstmt1 -> [ε]
23: assignstmt2 -> [CONST]
4: stmtlist2 -> [stmtlist]
2: stmtlist -> [stmt, stmtlist2]
8: stmt -> [declar]
17: declar -> [type, type2, IDENTIFIER, ;]
13: type -> [num]
15: type2 -> [ε]
4: stmtlist2 -> [stmtlist]
2: stmtlist -> [stmt, stmtlist2]
6: stmt -> [simplestmt]
10: simplestmt -> [iostmt]
41: iostmt -> [read, (, IDENTIFIER, ), ;]
4: stmtlist2 -> [stmtlist]
2: stmtlist -> [stmt, stmtlist2]
7: stmt -> [structstmt]
43: structstmt -> [ifstmt]
45: ifstmt -> [if, (, condition, ), stmtlist, ifstmt2, ;]
49: condition -> [condition1, condition2, condition1]
50: condition1 -> [IDENTIFIER, condition11]
54: condition11 -> [ε]
55: condition2 -> [aritoperators]
57: aritoperators -> [<]
50: condition1 -> [IDENTIFIER, condition11]
54: condition11 -> [ε]
2: stmtlist -> [stmt, stmtlist2]
6: stmt -> [simplestmt]
10: simplestmt -> [iostmt]
42: iostmt -> [write, (, IDENTIFIER, ), ;]
5: stmtlist2 -> [ε]
47: ifstmt2 -> [endif]
4: stmtlist2 -> [stmtlist]
2: stmtlist -> [stmt, stmtlist2]
7: stmt -> [structstmt]
44: structstmt -> [whilestmt]
48: whilestmt -> [while, (, condition, ), stmtlist2, endwhile, ;]
49: condition -> [condition1, condition2, condition1]
50: condition1 -> [IDENTIFIER, condition11]
54: condition11 -> [ε]
55: condition2 -> [aritoperators]
57: aritoperators -> [<]
50: condition1 -> [IDENTIFIER, condition11]
54: condition11 -> [ε]
4: stmtlist2 -> [stmtlist]
2: stmtlist -> [stmt, stmtlist2]
6: stmt -> [simplestmt]
10: simplestmt -> [iostmt]
42: iostmt -> [write, (, IDENTIFIER, ), ;]
4: stmtlist2 -> [stmtlist]
2: stmtlist -> [stmt, stmtlist2]
6: stmt -> [simplestmt]
9: simplestmt -> [assignstmt]
18: assignstmt -> [IDENTIFIER, assignstmt1, =, assignstmt2, ;]
20: assignstmt1 -> [ε]
23: assignstmt2 -> [CONST]
5: stmtlist2 -> [ε]
5: stmtlist2 -> [ε]

programDef->[program, IDENTIFIER, ;, stmtlist, endprogram, ;]->[program, IDENTIFIER, ;, stmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, declar, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, type, type2, IDENTIFIER, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, type2, IDENTIFIER, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, stmtlist, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, stmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, declar, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, type, type2, IDENTIFIER, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, type2, IDENTIFIER, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, stmtlist, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, stmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, simplestmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, assignstmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, assignstmt1, =, assignstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, assignstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, stmtlist, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, stmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, simplestmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, assignstmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, assignstmt1, =, assignstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, assignstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, stmtlist, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, stmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, declar, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, type, type2, IDENTIFIER, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, type2, IDENTIFIER, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, stmtlist, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, stmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, simplestmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, iostmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, stmtlist, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, stmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, structstmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, ifstmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, condition, ), stmtlist, ifstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, condition1, condition2, condition1, ), stmtlist, ifstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, condition11, condition2, condition1, ), stmtlist, ifstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, condition2, condition1, ), stmtlist, ifstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, aritoperators, condition1, ), stmtlist, ifstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, condition1, ), stmtlist, ifstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, condition11, ), stmtlist, ifstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), stmtlist, ifstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), stmt, stmtlist2, ifstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), simplestmt, stmtlist2, ifstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), iostmt, stmtlist2, ifstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, stmtlist2, ifstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, ifstmt2, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, stmtlist, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, stmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, structstmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, whilestmt, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, condition, ), stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, condition1, condition2, condition1, ), stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, condition11, condition2, condition1, ), stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, condition2, condition1, ), stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, aritoperators, condition1, ), stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, condition1, ), stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, condition11, ), stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), stmtlist, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), stmt, stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), simplestmt, stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), iostmt, stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, stmtlist, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, stmt, stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, simplestmt, stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, assignstmt, stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, IDENTIFIER, assignstmt1, =, assignstmt2, ;, stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, IDENTIFIER, =, assignstmt2, ;, stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, IDENTIFIER, =, CONST, ;, stmtlist2, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, IDENTIFIER, =, CONST, ;, endwhile, ;, stmtlist2, endprogram, ;]->[program, IDENTIFIER, ;, num, IDENTIFIER, ;, num, IDENTIFIER, ;, IDENTIFIER, =, CONST, ;, IDENTIFIER, =, CONST, ;, num, IDENTIFIER, ;, read, (, IDENTIFIER, ), ;, if, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, endif, ;, while, (, IDENTIFIER, <, IDENTIFIER, ), write, (, IDENTIFIER, ), ;, IDENTIFIER, =, CONST, ;, endwhile, ;, endprogram, ;]
